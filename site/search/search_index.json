{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Sample Documentation","text":"<p>This is the Home page. Navigate to the Guide in the menu to learn more.</p>"},{"location":"guide/create-venv/","title":"Setting Up a Python Virtual Environment on macOS","text":"<p>A Python virtual environment (venv) is an isolated environment where you can install packages and dependencies without affecting the system-wide Python installation.</p> <p>This guide covers the steps to set up and use a virtual environment on macOS.</p>"},{"location":"guide/create-venv/#quick-virtual-environment-commands-macos","title":"Quick Virtual Environment Commands (macOS)","text":"Command Description <code>python3 --version</code> Check installed Python version <code>python3 -m venv .venv</code> Create a virtual environment <code>source .venv/bin/activate</code> Activate the virtual environment <code>which python</code> Check the active Python interpreter <code>pip install package-name</code> Install a package inside the environment <code>deactivate</code> Exit the virtual environment <code>rm -rf .venv</code> Remove the virtual environment"},{"location":"guide/create-venv/#1-check-python-installation","title":"1. Check Python Installation","text":"<p>Ensure Python is installed on your system:</p> <pre><code>python3 --version\n</code></pre> <p>If Python is not installed, install it via Homebrew:</p> <pre><code>brew install python3\n</code></pre>"},{"location":"guide/create-venv/#2-create-a-project-folder-and-virtual-environment","title":"2. Create a Project Folder and Virtual Environment","text":"<p>Create a new folder in your preferred location.</p> <p>Drag the folder to VS Code icon to open the folder in VS Code</p> <p>Use the Command Control+Shift+` or Click Terminal-&gt;New Terminal in the Menu Bar to access the terminal</p> <p>Run the following command to create your virtual environment. Replace your_environment_name to your preferred environment name</p> <pre><code>python3 -m venv your_environment_name\n</code></pre> <p>This will create a your_environment_name folder in your project directory containing an isolated Python environment.</p>"},{"location":"guide/create-venv/#3-activate-the-virtual-environment","title":"3. Activate the Virtual Environment","text":"<p>To activate the virtual environment, run:</p> <pre><code>source your_environment_name/bin/activate\n</code></pre> <p>Once activated, your terminal prompt will change to indicate that you are inside the virtual environment.</p>"},{"location":"guide/create-venv/#4-install-packages-inside-the-virtual-environment","title":"4. Install Packages Inside the Virtual Environment","text":"<p>To install a package, use pip:</p> <pre><code>pip install matplotlib\n</code></pre> <p>All installed packages will now reside inside .venv and will not affect your system-wide Python installation. To check if matplotlib got installed, run the following command to find all the installed packages:</p> <pre><code>pip list\n</code></pre>"},{"location":"guide/create-venv/#5-deactivate-the-virtual-environment","title":"5. Deactivate the Virtual Environment","text":"<p>To exit the virtual environment after completion and return to the system-wide Python installation, run:</p> <pre><code>deactivate\n</code></pre>"},{"location":"guide/streamlit-deploy/","title":"Deploy a Python Streamlit App to Streamlit Cloud","text":"<p>This guide walks you through writing a Streamlit app, connecting to GitHub, and deploying it to Streamlit Cloud in simple steps.</p>"},{"location":"guide/streamlit-deploy/#step-1-write-a-simple-streamlit-app-in-vs-code","title":"\ud83d\udccc Step 1: Write a Simple Streamlit App in VS Code","text":""},{"location":"guide/streamlit-deploy/#1-install-python-streamlit","title":"1\ufe0f\u20e3 Install Python &amp; Streamlit","text":"<p>Before writing code, ensure Python is installed. Download it from: \ud83d\udd17 Python Official Website</p> <p>Next, open VS Code, launch a terminal using Terminal-&gt; New Terminal </p> <p>Create a virtual environment in python using Creating Python Virtual Environment and install Streamlit using the following command:</p> <pre><code>pip install streamlit\n</code></pre>"},{"location":"guide/streamlit-deploy/#2-create-a-python-file","title":"2\ufe0f\u20e3 Create a Python File","text":"<ul> <li> <p>Create a new folder for your project (File-&gt; Open Folder). </p> </li> <li> <p>Create a folder in your local machine </p> </li> <li> <p>Inside the folder, create a Python file, e.g., <code>app.py</code>. </p> </li> <li> <p>Add this simple Streamlit app:</p> </li> </ul> <pre><code>import streamlit as st\n\nst.title(\"\ud83d\ude80 My First Streamlit App\")\nst.write(\"Hello, Streamlit Community!\")\n</code></pre> <p>After you add your python code, you need to setup a requirements.txt file which contains the libraries needed to install before for the web app to work. To generate a requirements.txt, do the following steps:</p> <ul> <li>Open ChatGPT or Claude</li> <li>Paste the following prompt. Replace with your python code</li> </ul> <pre><code>Generate a requirements.txt file for the following python code without any versions for the libraries:\n\nCode:\n\nimport streamlit as st\nst.title(\"\ud83d\ude80 My First Streamlit App\")\nst.write(\"Hello, Streamlit Community!\")\n</code></pre> <p>The LLM will generate the names of all the required libraries in requirements.txt needed to deploy your application.</p> <pre><code>streamlit\n</code></pre> <p></p> <p>Go to VSCode, and Create a file named <code>requirements.txt</code> and add the libraries provided by ChatGPT/Claude and save the file.</p> <p></p>"},{"location":"guide/streamlit-deploy/#3-run-the-app-locally","title":"3\ufe0f\u20e3 Run the App Locally","text":"<p>To test the app before deployment, run:</p> <pre><code>streamlit run app.py\n</code></pre> <p></p> <p></p> <p>This should open a local webpage showing your app. If everything works, proceed to the next step. Ensure your virtual environment is running before executing the streamlit command</p>"},{"location":"guide/streamlit-deploy/#step-2-upload-your-code-to-github","title":"\ud83d\udccc Step 2: Upload Your Code to GitHub","text":""},{"location":"guide/streamlit-deploy/#1-create-a-github-account","title":"1\ufe0f\u20e3 Create a GitHub Account","text":"<p>\ud83d\udd17 Sign up on GitHub (if you don't have an account).</p>"},{"location":"guide/streamlit-deploy/#2-initialize-a-git-repository-in-vs-code","title":"2\ufe0f\u20e3 Initialize a Git Repository in VS Code","text":"<ul> <li>Open VS Code terminal (Terminal-&gt;New Terminal) in your project folder.</li> <li>Run the following commands to initialize Git:</li> </ul> <pre><code>git init\ngit add .\ngit commit -m \"Initial commit\"\n</code></pre>"},{"location":"guide/streamlit-deploy/#3-create-a-github-repository","title":"3\ufe0f\u20e3 Create a GitHub Repository","text":"<ul> <li>Go to GitHub \u2192 Login to your account -&gt; </li> </ul> <p>Click your profile at the top right -&gt; Select \"Your Repositories\"  </p> <p>Click New Button to create new repository. </p> <ul> <li>Give it a name, e.g., <code>my-test-app</code>.</li> <li>Select Public or Private Private keeps the repository and the code within it hidden.</li> <li> <p>Select <code>Python</code> from the drop down of <code>.gitignore</code> template. This is needed to ensure unwanted python library files are not added to github. </p> </li> <li> <p>Click Create Repository. </p> </li> </ul>"},{"location":"guide/streamlit-deploy/#4-connect-vs-code-to-github-push-code","title":"4\ufe0f\u20e3 Connect VS Code to GitHub &amp; Push Code","text":"<ul> <li>Back in VS Code terminal, run:</li> </ul> <pre><code>git remote add origin https://github.com/YOUR_USERNAME/YOUR_APP_NAME.git\ngit branch -M main\ngit pull origin main --rebase\ngit push -u origin main\n</code></pre> <p> The above commands will first connect to your repository in Github, fetch the latest code from your github repository and update it in your local machine's VS Code, and then push the code changes you made to the repository in Github.</p> <p>Now your code is on GitHub! \u2705</p>"},{"location":"guide/streamlit-deploy/#step-3-deploy-to-streamlit-cloud","title":"\ud83d\udccc Step 3: Deploy to Streamlit Cloud","text":""},{"location":"guide/streamlit-deploy/#1-sign-in-to-streamlit-cloud","title":"1\ufe0f\u20e3 Sign in to Streamlit Cloud","text":"<ul> <li>Go to Streamlit Community Cloud:   \ud83d\udd17 https://streamlit.io/cloud</li> <li>Click \"Sign in with GitHub\".</li> <li>Authorize Streamlit to access your GitHub account.</li> </ul>"},{"location":"guide/streamlit-deploy/#2-create-a-new-app","title":"2\ufe0f\u20e3 Create a New App","text":"<ul> <li>Click \"New App\" at the top right.</li> <li>Select your GitHub repository (<code>streamlit-app</code>).</li> <li>Choose the <code>main</code> branch.</li> <li>Select the python file <code>app.py</code></li> <li>Give a good nice domain name for the app, for example <code>my-test-app</code></li> </ul>"},{"location":"guide/streamlit-deploy/#3-select-python-version-advanced-settings","title":"3\ufe0f\u20e3 Select Python Version &amp; Advanced Settings","text":"<ul> <li>Set Python Version (e.g., <code>3.10</code> or <code>3.11</code>).</li> <li>Click Advanced settings:</li> <li>If your app requires external API keys, you can add secrets here.</li> </ul>"},{"location":"guide/streamlit-deploy/#step-4-add-api-keys-secrets-if-needed","title":"\ud83d\udccc Step 4: Add API Keys &amp; Secrets (If Needed)","text":"<p>In Advanced Settings of Streamlit Deployment in Streamlit cloud, add all your secrets (API Keys etc from your .env file) in a toml format. Here is an example:</p> <pre><code>OPENAI_API_KEY=\"your-openai-api-key\"\n</code></pre> <p>Click Save after adding the secrets in advanced settings</p>"},{"location":"guide/streamlit-deploy/#step-5-finalize-share","title":"\ud83d\udccc Step 5: Finalize &amp; Share","text":"<ul> <li>Click Deploy and wait for Streamlit to set up your app.</li> <li>Once done, Streamlit will provide a live URL to share your app.</li> </ul> <p>Example: \ud83d\udd17 https://my-test-app.streamlit.app</p>"},{"location":"guide/streamlit-deploy/#congratulations","title":"\ud83c\udf89 Congratulations!","text":"<p>You have successfully: \u2705 Written a Streamlit app in VS Code \u2705 Pushed it to GitHub \u2705 Deployed it on Streamlit Cloud \u2705 Added secret keys securely  </p> <p>Now, you can share your app with anyone! \ud83d\ude80</p>"}]}